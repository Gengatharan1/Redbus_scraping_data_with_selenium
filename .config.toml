{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "primaryColor = \"#f63366\"\n",
    "backgroundColor = \"#FAFAFA\"\n",
    "secondaryBackgroundColor = \"#CED8EC\"\n",
    "textColor = \"#262730\"\n",
    "font = \"sans serif\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import plotly.figure_factory as ff\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "# This code is different for each deployed app.\n",
    "CURRENT_THEME = \"light\"\n",
    "IS_DARK_THEME = False\n",
    "EXPANDER_TEXT = \"\"\"\n",
    "    This is Streamlit's default *Light* theme. It should be enabled by default ðŸŽˆ\n",
    "    If not, you can enable it in the app menu (â˜° -> Settings -> Theme).\n",
    "    \"\"\"\n",
    "\n",
    "# \"\"\"\n",
    "#     This is Streamlit's default *Dark* theme. You can enable it in the app menu\n",
    "#     (â˜° -> Settings -> Theme) or by copying the following code to\n",
    "#     `.streamlit/config.toml`:\n",
    "\n",
    "#     ```python\n",
    "#     [theme]\n",
    "#     primaryColor=\"#d33682\"\n",
    "#     backgroundColor=\"#002b36\"\n",
    "#     secondaryBackgroundColor=\"#586e75\"\n",
    "#     textColor=\"#fafafa\"\n",
    "#     font=\"sans serif\"\n",
    "#     ```\n",
    "# \"\"\"\n",
    "\n",
    "# \"\"\"\n",
    "# This is a custom theme. You can enable it by copying the following code\n",
    "# to `.streamlit/config.toml`:\n",
    "\n",
    "# ```python\n",
    "# [theme]\n",
    "# primaryColor=\"#d33682\"\n",
    "# backgroundColor=\"#002b36\"\n",
    "# secondaryBackgroundColor=\"#586e75\"\n",
    "# textColor=\"#fafafa\"\n",
    "# font=\"sans serif\"\n",
    "# ```\n",
    "# \"\"\"\n",
    "\n",
    "\n",
    "# This code is the same for each deployed app.\n",
    "st.image(\n",
    "    \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/artist-palette_1f3a8.png\",\n",
    "    width=100,\n",
    ")\n",
    "\n",
    "\"\"\"\n",
    "# Try out Theming!\n",
    "\n",
    "Click on the images below to view this app with different themes. \n",
    "\"\"\"\n",
    "\n",
    "\"\"\n",
    "\n",
    "THEMES = [\n",
    "    \"light\",\n",
    "    \"dark\",\n",
    "    \"green\",\n",
    "    \"blue\",\n",
    "]\n",
    "GITHUB_OWNER = \"streamlit\"\n",
    "\n",
    "# Show thumbnails for available themes.\n",
    "# As html img tags here, so we can add links on them.\n",
    "cols = st.beta_columns(len(THEMES))\n",
    "for col, theme in zip(cols, THEMES):\n",
    "\n",
    "    # Get repo name for this theme (to link to correct deployed app)-\n",
    "    if theme == \"light\":\n",
    "        repo = \"theming-showcase\"\n",
    "    else:\n",
    "        repo = f\"theming-showcase-{theme}\"\n",
    "\n",
    "    # Set border of current theme to red, otherwise black or white\n",
    "    if theme == CURRENT_THEME:\n",
    "        border_color = \"red\"\n",
    "    else:\n",
    "        border_color = \"lightgrey\" if IS_DARK_THEME else \"black\"\n",
    "\n",
    "    col.markdown(\n",
    "        # f'<p align=center><a href=\"https://share.streamlit.io/{GITHUB_OWNER}/{repo}/main\"><img style=\"border: 1px solid {border_color}\" alt=\"{theme}\" src=\"https://raw.githubusercontent.com/{GITHUB_OWNER}/theming-showcase/main/thumbnails/{theme}.png\" width=150></a></p>',\n",
    "        f'<p align=center><a href=\"https://apps.streamlitusercontent.com/{GITHUB_OWNER}/{repo}/main/streamlit_app.py/+/\"><img style=\"border: 1px solid {border_color}\" alt=\"{theme}\" src=\"https://raw.githubusercontent.com/{GITHUB_OWNER}/theming-showcase/main/thumbnails/{theme}.png\" width=150></a></p>',\n",
    "        unsafe_allow_html=True,\n",
    "    )\n",
    "    if theme in [\"light\", \"dark\"]:\n",
    "        theme_descriptor = theme.capitalize() + \" theme\"\n",
    "    else:\n",
    "        theme_descriptor = \"Custom theme\"\n",
    "    col.write(f\"<p align=center>{theme_descriptor}</p>\", unsafe_allow_html=True)\n",
    "\n",
    "\n",
    "\"\"\n",
    "with st.beta_expander(\"Not loading?\"):\n",
    "    st.write(\n",
    "        \"You probably played around with themes before and overrode this app's theme. Go to â˜° -> Settings -> Theme and select *Custom Theme*.\"\n",
    "    )\n",
    "with st.beta_expander(\"How can I use this theme in my app?\"):\n",
    "    st.write(EXPANDER_TEXT)\n",
    "\n",
    "\"\"\n",
    "\"\"\n",
    "\n",
    "# Draw some dummy content in main page and sidebar.\n",
    "def draw_all(\n",
    "    key,\n",
    "    plot=False,\n",
    "):\n",
    "    st.write(\n",
    "        \"\"\"\n",
    "        # Example Widgets\n",
    "        \n",
    "        These widgets don't do anything. But look at all the new colors they got ðŸ‘€ \n",
    "    \n",
    "        ```python\n",
    "        # First some code.\n",
    "        streamlit = \"cool\"\n",
    "        theming = \"fantastic\"\n",
    "        both = \"ðŸ’¥\"\n",
    "        ```\n",
    "        \"\"\"\n",
    "    )\n",
    "\n",
    "    st.checkbox(\"Is this cool or what?\", key=key)\n",
    "    st.radio(\n",
    "        \"How many balloons?\",\n",
    "        [\"1 balloon ðŸŽˆ\", \"2 balloons ðŸŽˆðŸŽˆ\", \"3 balloons ðŸŽˆðŸŽˆðŸŽˆ\"],\n",
    "        key=key,\n",
    "    )\n",
    "    st.button(\"ðŸ¤¡ Click me\", key=key)\n",
    "\n",
    "    # if plot:\n",
    "    #     st.write(\"Oh look, a plot:\")\n",
    "    #     x1 = np.random.randn(200) - 2\n",
    "    #     x2 = np.random.randn(200)\n",
    "    #     x3 = np.random.randn(200) + 2\n",
    "\n",
    "    #     hist_data = [x1, x2, x3]\n",
    "    #     group_labels = [\"Group 1\", \"Group 2\", \"Group 3\"]\n",
    "\n",
    "    #     fig = ff.create_distplot(hist_data, group_labels, bin_size=[0.1, 0.25, 0.5])\n",
    "\n",
    "    #     st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "    st.file_uploader(\"You can now upload with style\", key=key)\n",
    "    st.slider(\n",
    "        \"From 10 to 11, how cool are themes?\", min_value=10, max_value=11, key=key\n",
    "    )\n",
    "    # st.select_slider(\"Pick a number\", [1, 2, 3], key=key)\n",
    "    st.number_input(\"So many numbers\", key=key)\n",
    "    st.text_area(\"A little writing space for you :)\", key=key)\n",
    "    st.selectbox(\n",
    "        \"My favorite thing in the world is...\",\n",
    "        [\"Streamlit\", \"Theming\", \"Baloooons ðŸŽˆ \"],\n",
    "        key=key,\n",
    "    )\n",
    "    # st.multiselect(\"Pick a number\", [1, 2, 3], key=key)\n",
    "    # st.color_picker(\"Colors, colors, colors\", key=key)\n",
    "    with st.beta_expander(\"Expand me!\"):\n",
    "        st.write(\"Hey there! Nothing to see here ðŸ‘€ \")\n",
    "    st.write(\"\")\n",
    "    # st.write(\"That's our progress on theming:\")\n",
    "    # st.progress(0.99)\n",
    "    if plot:\n",
    "        st.write(\"And here's some data and plots\")\n",
    "        st.json({\"data\": [1, 2, 3, 4]})\n",
    "        st.dataframe({\"data\": [1, 2, 3, 4]})\n",
    "        st.table({\"data\": [1, 2, 3, 4]})\n",
    "        st.line_chart({\"data\": [1, 2, 3, 4]})\n",
    "        # st.help(st.write)\n",
    "    st.write(\"This is the end. Have fun building themes!\")\n",
    "\n",
    "\n",
    "draw_all(\"main\", plot=True)\n",
    "\n",
    "with st.sidebar:\n",
    "    draw_all(\"sidebar\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
